{"version":3,"file":"EmbraceExtendedSpan.cjs","sources":["../../../../src/managers/EmbraceTraceManager/EmbraceExtendedSpan.ts"],"sourcesContent":["import type {\n  Attributes,\n  AttributeValue,\n  Exception,\n  Link,\n  Span,\n  SpanContext,\n  SpanStatus,\n  TimeInput,\n} from '@opentelemetry/api';\nimport type {\n  ExtendedSpan,\n  ExtendedSpanFailedOptions,\n} from '../../api-traces/index.js';\nimport { KEY_EMB_ERROR_CODE } from '../../constants/index.js';\n\n/**\n * EmbraceSpan for the most part simply delegates to the underlying Span it receives on initialization so\n * that it satisfies the Span interface. In addition, it gives us a spot where we can implement helpers that are part\n * of the EmbraceSpan interface.\n */\nexport class EmbraceExtendedSpan implements ExtendedSpan {\n  private readonly _span: ExtendedSpan;\n\n  public constructor(span: Span) {\n    this._span = span as ExtendedSpan;\n  }\n\n  /**\n   * Expose attributes by extending OpenTelemetry's ReadableSpan.\n   */\n  public get attributes(): Attributes {\n    return this._span.attributes;\n  }\n\n  public addEvent(\n    name: string,\n    attributesOrStartTime?: Attributes | TimeInput,\n    startTime?: TimeInput\n  ): this {\n    this._span.addEvent(name, attributesOrStartTime, startTime);\n    return this;\n  }\n\n  public addLink(link: Link): this {\n    this._span.addLink(link);\n    return this;\n  }\n\n  public addLinks(links: Link[]): this {\n    this._span.addLinks(links);\n    return this;\n  }\n\n  public end(endTime?: TimeInput): void {\n    this._span.end(endTime);\n  }\n\n  public isRecording(): boolean {\n    return this._span.isRecording();\n  }\n\n  public recordException(exception: Exception, time?: TimeInput): void {\n    this._span.recordException(exception, time);\n  }\n\n  public setAttribute(key: string, value: AttributeValue): this {\n    this._span.setAttribute(key, value);\n    return this;\n  }\n\n  public setAttributes(attributes: Attributes): this {\n    this._span.setAttributes(attributes);\n    return this;\n  }\n\n  public removeAttribute(key: string): this {\n    const { [key]: _, ...attributes } = this._span.attributes;\n    // @ts-expect-error Read/write spans are allowed per the spec https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#additional-span-interfaces\n    this._span.attributes = attributes;\n    return this;\n  }\n\n  public setStatus(status: SpanStatus): this {\n    this._span.setStatus(status);\n    return this;\n  }\n\n  public spanContext(): SpanContext {\n    return this._span.spanContext();\n  }\n\n  public updateName(name: string): this {\n    this._span.updateName(name);\n    return this;\n  }\n\n  public fail(\n    options: ExtendedSpanFailedOptions = {\n      code: 'failure',\n    }\n  ): void {\n    if (options.code) {\n      this._span.setAttribute(KEY_EMB_ERROR_CODE, options.code.toUpperCase());\n    }\n\n    this._span.end(options.endTime);\n  }\n}\n"],"names":["EmbraceExtendedSpan","span","_span","attributes","addEvent","name","attributesOrStartTime","startTime","addLink","link","addLinks","links","end","endTime","isRecording","recordException","exception","time","setAttribute","key","value","setAttributes","removeAttribute","_","setStatus","status","spanContext","updateName","fail","options","code","KEY_EMB_ERROR_CODE","toUpperCase"],"mappings":"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"}