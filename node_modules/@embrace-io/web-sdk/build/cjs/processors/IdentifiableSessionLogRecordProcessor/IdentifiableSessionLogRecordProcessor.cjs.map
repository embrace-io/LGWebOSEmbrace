{"version":3,"file":"IdentifiableSessionLogRecordProcessor.cjs","sources":["../../../../src/processors/IdentifiableSessionLogRecordProcessor/IdentifiableSessionLogRecordProcessor.ts"],"sourcesContent":["import type { SdkLogRecord, LogRecordProcessor } from '@opentelemetry/sdk-logs';\nimport {\n  ATTR_LOG_RECORD_UID,\n  ATTR_SESSION_ID,\n} from '@opentelemetry/semantic-conventions/incubating';\nimport type { SpanSessionManager } from '../../api-sessions/index.js';\nimport { generateUUID } from '../../utils/index.js';\nimport type { IdentifiableSessionLogRecordProcessorArgs } from './types.js';\n\nexport class IdentifiableSessionLogRecordProcessor\n  implements LogRecordProcessor\n{\n  private readonly _spanSessionManager: SpanSessionManager;\n\n  public constructor({\n    spanSessionManager,\n  }: IdentifiableSessionLogRecordProcessorArgs) {\n    this._spanSessionManager = spanSessionManager;\n  }\n\n  // no-op\n  public forceFlush(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  public onEmit(logRecord: SdkLogRecord) {\n    logRecord.setAttributes({\n      [ATTR_LOG_RECORD_UID]: generateUUID(),\n      [ATTR_SESSION_ID]: this._spanSessionManager.getSessionId(),\n    });\n  }\n\n  // no-op\n  public shutdown(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n}\n"],"names":["IdentifiableSessionLogRecordProcessor","spanSessionManager","_spanSessionManager","forceFlush","Promise","resolve","undefined","onEmit","logRecord","setAttributes","ATTR_LOG_RECORD_UID","generateUUID","ATTR_SESSION_ID","getSessionId","shutdown"],"mappings":";;;;;AASO,MAAMA,qCAAAA,CAAAA;IAKX,WAAA,CAAmB,EACjBC,kBAAkB,EACwB,CAAE;QAC5C,IAAI,CAACC,mBAAmB,GAAGD,kBAAAA;AAC7B,IAAA;;IAGOE,UAAAA,GAA4B;QACjC,OAAOC,OAAAA,CAAQC,OAAO,CAACC,SAAAA,CAAAA;AACzB,IAAA;AAEOC,IAAAA,MAAAA,CAAOC,SAAuB,EAAE;AACrCA,QAAAA,SAAAA,CAAUC,aAAa,CAAC;AACtB,YAAA,CAACC,iCAAsBC,yBAAAA,EAAAA;AACvB,YAAA,CAACC,6BAAkB,IAAI,CAACV,mBAAmB,CAACW,YAAY;AAC1D,SAAA,CAAA;AACF,IAAA;;IAGOC,QAAAA,GAA0B;QAC/B,OAAOV,OAAAA,CAAQC,OAAO,CAACC,SAAAA,CAAAA;AACzB,IAAA;AACF;;;;"}