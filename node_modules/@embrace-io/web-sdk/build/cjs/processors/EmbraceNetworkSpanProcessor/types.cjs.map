{"version":3,"file":"types.cjs","sources":["../../../../src/processors/EmbraceNetworkSpanProcessor/types.ts"],"sourcesContent":["import type { Attributes, AttributeValue } from '@opentelemetry/api';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-web';\nimport {\n  ATTR_HTTP_REQUEST_METHOD,\n  ATTR_HTTP_RESPONSE_STATUS_CODE,\n  ATTR_URL_FULL,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_URL,\n} from '@opentelemetry/semantic-conventions';\n\n// NetworkSpanAttributesDeprecated and NetworkSpanAttributesNewest are the types for network spans attributes based on the otel conventions.\n// The SEMATTRS_HTTP_METHOD attribute is deprecated in favor of ATTR_HTTP_REQUEST_METHOD,\n// but the web auto instrumentation still uses the deprecated attribute, so we will support both\n// the latest semconv and the deprecated ones for ease of use.\ninterface NetworkSpanAttributesDeprecated extends Attributes {\n  [SEMATTRS_HTTP_METHOD]: AttributeValue;\n}\n\ninterface NetworkSpanAttributesNewest extends Attributes {\n  [ATTR_HTTP_REQUEST_METHOD]: AttributeValue;\n}\n\ntype NetworkSpanAttributes =\n  | NetworkSpanAttributesNewest\n  | NetworkSpanAttributesDeprecated;\n\ninterface NetworkSpan extends ReadableSpan {\n  attributes: NetworkSpanAttributes;\n}\n\nconst SCHEME_RE = /.+:\\/\\/.+/;\n\nexport const isNetworkSpan = (\n  span: ReadableSpan | NetworkSpan\n): span is NetworkSpan => {\n  if (\n    (span.attributes[ATTR_HTTP_REQUEST_METHOD] || // eslint-disable-next-line @typescript-eslint/no-deprecated\n      span.attributes[SEMATTRS_HTTP_METHOD]) &&\n    (typeof span.attributes[ATTR_HTTP_RESPONSE_STATUS_CODE] === 'number' || // eslint-disable-next-line @typescript-eslint/no-deprecated\n      typeof span.attributes[SEMATTRS_HTTP_STATUS_CODE] === 'number')\n  ) {\n    const url = // eslint-disable-next-line @typescript-eslint/no-deprecated\n      span.attributes[ATTR_URL_FULL] ?? span.attributes[SEMATTRS_HTTP_URL];\n\n    return !!(url && typeof url === 'string' && SCHEME_RE.exec(url));\n  }\n\n  return false;\n};\n\n// not used yet, but added for clarity. This is the type for Embrace tagged network spans\n// interface EmbraceNetworkSpanAttributes extends Attributes {\n//   [KEY_EMB_TYPE]: EMB_TYPES.Network;\n// }\n// interface EmbraceNetworkSpan extends NetworkSpan {\n//   attributes: NetworkSpanAttributes & EmbraceNetworkSpanAttributes;\n// }\n"],"names":["SCHEME_RE","isNetworkSpan","span","attributes","ATTR_HTTP_REQUEST_METHOD","SEMATTRS_HTTP_METHOD","ATTR_HTTP_RESPONSE_STATUS_CODE","SEMATTRS_HTTP_STATUS_CODE","url","ATTR_URL_FULL","SEMATTRS_HTTP_URL","exec"],"mappings":";;;;AA+BA,MAAMA,SAAAA,GAAY,WAAA;AAEX,MAAMC,gBAAgB,CAC3BC,IAAAA,GAAAA;AAEA,IAAA,IACE,CAACA,IAAAA,CAAKC,UAAU,CAACC,4CAAAA,CAAyB;AACxCF,IAAAA,IAAAA,CAAKC,UAAU,CAACE,wCAAAA,CAAoB,MACrC,OAAOH,IAAAA,CAAKC,UAAU,CAACG,kDAAAA,CAA+B,KAAK;AAC1D,IAAA,OAAOJ,KAAKC,UAAU,CAACI,6CAAAA,CAA0B,KAAK,QAAO,CAAA,EAC/D;QACA,MAAMC,GAAAA,GACJN,KAAKC,UAAU,CAACM,kCAAc,IAAIP,IAAAA,CAAKC,UAAU,CAACO,qCAAAA,CAAkB;QAEtE,OAAO,CAAC,EAAEF,GAAAA,IAAO,OAAOA,QAAQ,QAAA,IAAYR,SAAAA,CAAUW,IAAI,CAACH,GAAAA,CAAG,CAAA;AAChE,IAAA;IAEA,OAAO,KAAA;AACT,EAAE;;;;;;;;;;"}