'use strict';

var ProxyUserManager = require('../../manager/ProxyUserManager/ProxyUserManager.cjs');

class UserAPI {
    constructor({ proxyUserManager }){
        this._proxyUserManager = proxyUserManager;
    }
    static getInstance() {
        if (!UserAPI._instance) {
            UserAPI._instance = new UserAPI({
                proxyUserManager: new ProxyUserManager.ProxyUserManager()
            });
        }
        return UserAPI._instance;
    }
    getUserManager() {
        return this._proxyUserManager;
    }
    setGlobalUserManager(userManager) {
        this._proxyUserManager.setDelegate(userManager);
    }
    getEmbraceUserId() {
        return this.getUserManager().getEmbraceUserId();
    }
    getUserId() {
        return this.getUserManager().getUserId();
    }
    setUserId(userId) {
        this.getUserManager().setUserId(userId);
    }
    clearUserId() {
        this.getUserManager().clearUserId();
    }
}

exports.UserAPI = UserAPI;
//# sourceMappingURL=UserAPI.cjs.map
