'use strict';

var core = require('@opentelemetry/core');
var api = require('@opentelemetry/api');
var attributes = require('../../constants/attributes.cjs');

class EmbraceW3CTraceContextPropagator extends core.W3CTraceContextPropagator {
    inject(context, carrier, setter) {
        super.inject(context, carrier, setter);
        // Add the injected Traceparent header as an attribute to the span in the current
        // context if both are available
        const span = api.trace.getSpan(context);
        if (span) {
            const traceparent = api.defaultTextMapGetter.get(carrier, 'traceparent');
            if (traceparent) {
                span.setAttribute(attributes.KEY_EMB_W3C_TRACEPARENT, traceparent);
            }
        }
    }
}

exports.EmbraceW3CTraceContextPropagator = EmbraceW3CTraceContextPropagator;
//# sourceMappingURL=EmbraceW3CTraceContextPropagator.cjs.map
