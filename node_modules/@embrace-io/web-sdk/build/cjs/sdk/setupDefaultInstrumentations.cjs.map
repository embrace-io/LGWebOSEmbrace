{"version":3,"file":"setupDefaultInstrumentations.cjs","sources":["../../../src/sdk/setupDefaultInstrumentations.ts"],"sourcesContent":["import type { Instrumentation } from '@opentelemetry/instrumentation';\nimport {\n  ClicksInstrumentation,\n  DocumentLoadInstrumentation,\n  EmbraceFetchInstrumentation,\n  EmbraceInstrumentationBase,\n  EmbraceXHRInstrumentation,\n  GlobalExceptionInstrumentation,\n  SpanSessionBrowserActivityInstrumentation,\n  SpanSessionOnLoadInstrumentation,\n  SpanSessionTimeoutInstrumentation,\n  SpanSessionVisibilityInstrumentation,\n  WebVitalsInstrumentation,\n} from '../instrumentations/index.js';\nimport type {\n  DefaultInstrumentationConfig,\n  SetupDefaultInstrumentationsArgs,\n} from './types.js';\n\nexport const setupDefaultInstrumentations = (\n  config: DefaultInstrumentationConfig = {},\n  {\n    logManager,\n    spanSessionManager,\n    embraceSpanProcessor,\n  }: SetupDefaultInstrumentationsArgs = {}\n): Instrumentation[] => {\n  /*\n    These instrumentations are core to managing the session lifecycle and so are not optional\n   */\n  const instrumentations: Instrumentation[] = [\n    new SpanSessionOnLoadInstrumentation(config['session-on-load']),\n    new SpanSessionVisibilityInstrumentation(\n      config['session-visibility'],\n      embraceSpanProcessor\n    ),\n    new SpanSessionBrowserActivityInstrumentation(config['session-activity']),\n    new SpanSessionTimeoutInstrumentation(config['session-timeout']),\n  ];\n\n  if (!config.omit?.has('exception')) {\n    instrumentations.push(\n      new GlobalExceptionInstrumentation(config['exception'])\n    );\n  }\n\n  if (!config.omit?.has('click')) {\n    instrumentations.push(new ClicksInstrumentation(config['click']));\n  }\n\n  if (!config.omit?.has('web-vital')) {\n    instrumentations.push(new WebVitalsInstrumentation(config['web-vital']));\n  }\n\n  if (!config.omit?.has('document-load')) {\n    instrumentations.push(\n      new DocumentLoadInstrumentation(config['document-load'])\n    );\n  }\n\n  if (!config.omit?.has('@opentelemetry/instrumentation-fetch')) {\n    instrumentations.push(\n      new EmbraceFetchInstrumentation({\n        ...config['network'],\n        ...config['@opentelemetry/instrumentation-fetch'],\n      })\n    );\n  }\n\n  if (!config.omit?.has('@opentelemetry/instrumentation-xml-http-request')) {\n    instrumentations.push(\n      new EmbraceXHRInstrumentation({\n        ...config['network'],\n        ...config['@opentelemetry/instrumentation-xml-http-request'],\n      })\n    );\n  }\n\n  for (const instrumentation of instrumentations) {\n    if (instrumentation instanceof EmbraceInstrumentationBase) {\n      if (spanSessionManager) {\n        instrumentation.setSessionManager(spanSessionManager);\n      }\n\n      if (logManager) {\n        instrumentation.setLogManager(logManager);\n      }\n    }\n  }\n\n  return instrumentations;\n};\n"],"names":["setupDefaultInstrumentations","config","logManager","spanSessionManager","embraceSpanProcessor","instrumentations","SpanSessionOnLoadInstrumentation","SpanSessionVisibilityInstrumentation","SpanSessionBrowserActivityInstrumentation","SpanSessionTimeoutInstrumentation","omit","has","push","GlobalExceptionInstrumentation","ClicksInstrumentation","WebVitalsInstrumentation","DocumentLoadInstrumentation","EmbraceFetchInstrumentation","EmbraceXHRInstrumentation","instrumentation","EmbraceInstrumentationBase","setSessionManager","setLogManager"],"mappings":";;;;;;;;;;;;;;MAmBaA,4BAAAA,GAA+B,CAC1CC,MAAAA,GAAuC,EAAE,EACzC,EACEC,UAAU,EACVC,kBAAkB,EAClBC,oBAAoB,EACa,GAAG,EAAE,GAAA;AAExC;;AAEC,MACD,MAAMC,gBAAAA,GAAsC;QAC1C,IAAIC,iEAAAA,CAAiCL,MAAM,CAAC,iBAAA,CAAkB,CAAA;AAC9D,QAAA,IAAIM,yEAAAA,CACFN,MAAM,CAAC,oBAAA,CAAqB,EAC5BG,oBAAAA,CAAAA;QAEF,IAAII,mFAAAA,CAA0CP,MAAM,CAAC,kBAAA,CAAmB,CAAA;QACxE,IAAIQ,mEAAAA,CAAkCR,MAAM,CAAC,iBAAA,CAAkB;AAChE,KAAA;AAED,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,WAAA,CAAA,EAAc;AAClCN,QAAAA,gBAAAA,CAAiBO,IAAI,CACnB,IAAIC,6DAAAA,CAA+BZ,MAAM,CAAC,WAAA,CAAY,CAAA,CAAA;AAE1D,IAAA;AAEA,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,OAAA,CAAA,EAAU;AAC9BN,QAAAA,gBAAAA,CAAiBO,IAAI,CAAC,IAAIE,2CAAAA,CAAsBb,MAAM,CAAC,OAAA,CAAQ,CAAA,CAAA;AACjE,IAAA;AAEA,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,WAAA,CAAA,EAAc;AAClCN,QAAAA,gBAAAA,CAAiBO,IAAI,CAAC,IAAIG,iDAAAA,CAAyBd,MAAM,CAAC,WAAA,CAAY,CAAA,CAAA;AACxE,IAAA;AAEA,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,eAAA,CAAA,EAAkB;AACtCN,QAAAA,gBAAAA,CAAiBO,IAAI,CACnB,IAAII,uDAAAA,CAA4Bf,MAAM,CAAC,eAAA,CAAgB,CAAA,CAAA;AAE3D,IAAA;AAEA,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,sCAAA,CAAA,EAAyC;QAC7DN,gBAAAA,CAAiBO,IAAI,CACnB,IAAIK,uDAAAA,CAA4B;YAC9B,GAAGhB,MAAM,CAAC,SAAA,CAAU;YACpB,GAAGA,MAAM,CAAC,sCAAA;AACZ,SAAA,CAAA,CAAA;AAEJ,IAAA;AAEA,IAAA,IAAI,CAACA,MAAAA,CAAOS,IAAI,EAAEC,IAAI,iDAAA,CAAA,EAAoD;QACxEN,gBAAAA,CAAiBO,IAAI,CACnB,IAAIM,mDAAAA,CAA0B;YAC5B,GAAGjB,MAAM,CAAC,SAAA,CAAU;YACpB,GAAGA,MAAM,CAAC,iDAAA;AACZ,SAAA,CAAA,CAAA;AAEJ,IAAA;IAEA,KAAK,MAAMkB,mBAAmBd,gBAAAA,CAAkB;AAC9C,QAAA,IAAIc,2BAA2BC,qDAAAA,EAA4B;AACzD,YAAA,IAAIjB,kBAAAA,EAAoB;AACtBgB,gBAAAA,eAAAA,CAAgBE,iBAAiB,CAAClB,kBAAAA,CAAAA;AACpC,YAAA;AAEA,YAAA,IAAID,UAAAA,EAAY;AACdiB,gBAAAA,eAAAA,CAAgBG,aAAa,CAACpB,UAAAA,CAAAA;AAChC,YAAA;AACF,QAAA;AACF,IAAA;IAEA,OAAOG,gBAAAA;AACT;;;;"}