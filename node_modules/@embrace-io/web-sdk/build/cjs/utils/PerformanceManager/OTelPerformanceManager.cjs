'use strict';

var core = require('@opentelemetry/core');

class OTelPerformanceManager {
    constructor(clock = window.performance){
        this.epochMillisFromOriginOffset = (originOffset)=>this._clock.timeOrigin + originOffset;
        this.getNowHRTime = ()=>core.millisToHrTime(this.getNowMillis());
        this.getNowMillis = ()=>this.epochMillisFromOriginOffset(this._clock.now()); // otperformance.now() returns milliseconds since timeOrigin, timeOrigin is the time from epoch to the start of the page load
        this.millisSinceHRTime = (time)=>this.getNowMillis() - core.hrTimeToMilliseconds(time);
        this._clock = clock;
    }
}

exports.OTelPerformanceManager = OTelPerformanceManager;
//# sourceMappingURL=OTelPerformanceManager.cjs.map
