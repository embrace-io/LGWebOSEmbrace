'use strict';

var sdkTraceWeb = require('@opentelemetry/sdk-trace-web');
var EventNames = require('./enums/EventNames.cjs');

const getPerformanceNavigationEntries = ()=>{
    const entries = {};
    const performanceNavigationTiming = window.performance.getEntriesByType('navigation')[0];
    const keys = Object.values(sdkTraceWeb.PerformanceTimingNames);
    keys.forEach((key)=>{
        if (sdkTraceWeb.hasKey(performanceNavigationTiming, key)) {
            const value = performanceNavigationTiming[key];
            if (typeof value === 'number') {
                entries[key] = value;
            }
        }
    });
    return entries;
};
const performancePaintNames = {
    'first-paint': EventNames.EventNames.FIRST_PAINT,
    'first-contentful-paint': EventNames.EventNames.FIRST_CONTENTFUL_PAINT
};
const addSpanPerformancePaintEvents = (span)=>{
    const performancePaintTiming = window.performance.getEntriesByType('paint');
    performancePaintTiming.forEach(({ name, startTime })=>{
        if (sdkTraceWeb.hasKey(performancePaintNames, name)) {
            span.addEvent(performancePaintNames[name], startTime);
        }
    });
};

exports.addSpanPerformancePaintEvents = addSpanPerformancePaintEvents;
exports.getPerformanceNavigationEntries = getPerformanceNavigationEntries;
//# sourceMappingURL=utils.cjs.map
