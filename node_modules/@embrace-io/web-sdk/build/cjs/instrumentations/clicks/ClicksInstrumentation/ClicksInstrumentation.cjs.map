{"version":3,"file":"ClicksInstrumentation.cjs","sources":["../../../../../src/instrumentations/clicks/ClicksInstrumentation/ClicksInstrumentation.ts"],"sourcesContent":["/*\n  This instrumentation is taking code from here as a starting point:\n    https://github.com/open-telemetry/opentelemetry-js-contrib/blob/main/plugins/web/opentelemetry-instrumentation-user-interaction/src/instrumentation.ts\n\n  But not using that instrumentation directly because:\n\n    1) We want to record clicks as span events on the Session span\n    2) There is a bug with the instrumentation that causes a large number of spans to be created for a single click\n      when zone context isn't available. To avoid the bug we take a simpler approach here and add a listener directly\n      to `document` rather than trying to patch the `addEventListener` method on the prototype, this does mean we miss\n      recording click events for which `stopPropagation` is called. See https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1368\n */\n\nimport { EmbraceInstrumentationBase } from '../../EmbraceInstrumentationBase/index.js';\nimport type { ClicksInstrumentationArgs } from './types.js';\n\nimport { getHTMLElementFriendlyName } from './utils.js';\n\nexport class ClicksInstrumentation extends EmbraceInstrumentationBase {\n  private readonly _onClickHandler: (event: MouseEvent) => void;\n\n  public constructor({\n    diag,\n    perf,\n    shouldTrack,\n    innerTextForElement,\n  }: ClicksInstrumentationArgs = {}) {\n    super({\n      instrumentationName: 'ClicksInstrumentation',\n      instrumentationVersion: '1.0.0',\n      diag,\n      perf,\n      config: {},\n    });\n\n    this._onClickHandler = (event: MouseEvent) => {\n      const element = event.target;\n\n      if (!(element instanceof HTMLElement)) {\n        return;\n      }\n      if (element.hasAttribute('disabled')) {\n        return;\n      }\n\n      if (shouldTrack && !shouldTrack(element)) {\n        return;\n      }\n\n      try {\n        const currentSessionSpan = this.sessionManager.getSessionSpan();\n        if (currentSessionSpan) {\n          currentSessionSpan.addEvent(\n            'click',\n            {\n              'emb.type': 'ux.tap',\n              'view.name': getHTMLElementFriendlyName(\n                element,\n                innerTextForElement\n                  ? innerTextForElement(element)\n                  : element.innerText\n              ),\n              'tap.coords': `${event.x.toString()},${event.y.toString()}`,\n            },\n            this.perf.epochMillisFromOriginOffset(event.timeStamp)\n          );\n        }\n      } catch (e) {\n        this._diag.error('failed to create new user interaction span event', e);\n      }\n    };\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n\n  public disable(): void {\n    document.removeEventListener('click', this._onClickHandler);\n  }\n\n  public enable(): void {\n    document.addEventListener('click', this._onClickHandler);\n  }\n}\n"],"names":["ClicksInstrumentation","EmbraceInstrumentationBase","diag","perf","shouldTrack","innerTextForElement","instrumentationName","instrumentationVersion","config","_onClickHandler","event","element","target","HTMLElement","hasAttribute","currentSessionSpan","sessionManager","getSessionSpan","addEvent","getHTMLElementFriendlyName","innerText","x","toString","y","epochMillisFromOriginOffset","timeStamp","e","_diag","error","_config","enabled","enable","disable","document","removeEventListener","addEventListener"],"mappings":";;;;;AAkBO,MAAMA,qBAAAA,SAA8BC,qDAAAA,CAAAA;AAGzC,IAAA,WAAA,CAAmB,EACjBC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,mBAAmB,EACO,GAAG,EAAE,CAAE;AACjC,QAAA,KAAK,CAAC;YACJC,mBAAAA,EAAqB,uBAAA;YACrBC,sBAAAA,EAAwB,OAAA;AACxBL,YAAAA,IAAAA;AACAC,YAAAA,IAAAA;AACAK,YAAAA,MAAAA,EAAQ;AACV,SAAA,CAAA;QAEA,IAAI,CAACC,eAAe,GAAG,CAACC,KAAAA,GAAAA;YACtB,MAAMC,OAAAA,GAAUD,MAAME,MAAM;AAE5B,YAAA,IAAI,EAAED,OAAAA,YAAmBE,WAAU,CAAA,EAAI;AACrC,gBAAA;AACF,YAAA;YACA,IAAIF,OAAAA,CAAQG,YAAY,CAAC,UAAA,CAAA,EAAa;AACpC,gBAAA;AACF,YAAA;YAEA,IAAIV,WAAAA,IAAe,CAACA,WAAAA,CAAYO,OAAAA,CAAAA,EAAU;AACxC,gBAAA;AACF,YAAA;YAEA,IAAI;AACF,gBAAA,MAAMI,kBAAAA,GAAqB,IAAI,CAACC,cAAc,CAACC,cAAc,EAAA;AAC7D,gBAAA,IAAIF,kBAAAA,EAAoB;oBACtBA,kBAAAA,CAAmBG,QAAQ,CACzB,OAAA,EACA;wBACE,UAAA,EAAY,QAAA;AACZ,wBAAA,WAAA,EAAaC,iCACXR,OAAAA,EACAN,mBAAAA,GACIA,mBAAAA,CAAoBM,OAAAA,CAAAA,GACpBA,QAAQS,SAAS,CAAA;AAEvB,wBAAA,YAAA,EAAc,CAAA,EAAGV,KAAAA,CAAMW,CAAC,CAACC,QAAQ,EAAA,CAAG,CAAC,EAAEZ,KAAAA,CAAMa,CAAC,CAACD,QAAQ,EAAA,CAAA;AACzD,qBAAA,EACA,IAAI,CAACnB,IAAI,CAACqB,2BAA2B,CAACd,MAAMe,SAAS,CAAA,CAAA;AAEzD,gBAAA;AACF,YAAA,CAAA,CAAE,OAAOC,CAAAA,EAAG;AACV,gBAAA,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,kDAAA,EAAoDF,CAAAA,CAAAA;AACvE,YAAA;AACF,QAAA,CAAA;AAEA,QAAA,IAAI,IAAI,CAACG,OAAO,CAACC,OAAO,EAAE;AACxB,YAAA,IAAI,CAACC,MAAM,EAAA;AACb,QAAA;AACF,IAAA;IAEOC,OAAAA,GAAgB;AACrBC,QAAAA,QAAAA,CAASC,mBAAmB,CAAC,OAAA,EAAS,IAAI,CAACzB,eAAe,CAAA;AAC5D,IAAA;IAEOsB,MAAAA,GAAe;AACpBE,QAAAA,QAAAA,CAASE,gBAAgB,CAAC,OAAA,EAAS,IAAI,CAAC1B,eAAe,CAAA;AACzD,IAAA;AACF;;;;"}