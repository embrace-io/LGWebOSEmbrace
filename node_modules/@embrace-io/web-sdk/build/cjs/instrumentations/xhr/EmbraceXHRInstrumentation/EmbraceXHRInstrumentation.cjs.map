{"version":3,"file":"EmbraceXHRInstrumentation.cjs","sources":["../../../../../src/instrumentations/xhr/EmbraceXHRInstrumentation/EmbraceXHRInstrumentation.ts"],"sourcesContent":["import type { EmbraceXHRInstrumentationArgs } from './types.js';\n\nimport { isWrapped } from '@opentelemetry/instrumentation';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\n\nexport class EmbraceXHRInstrumentation extends XMLHttpRequestInstrumentation {\n  private readonly _omitIfAlreadyPatched?: boolean;\n\n  public constructor({\n    omitIfAlreadyPatched,\n    ...rest\n  }: EmbraceXHRInstrumentationArgs = {}) {\n    // Base constructor automatically calls this.enable() if enabled is true, but we need to run our overridden constructor\n    // first so force enabled false here and call it ourselves later\n    super({ ...rest, enabled: false });\n\n    this._omitIfAlreadyPatched = omitIfAlreadyPatched;\n\n    if (rest.enabled) {\n      this.enable();\n    }\n  }\n\n  public override enable(): void {\n    // The base implementation always removes and then re-patches, this means the last instrumentation to run \"wins\":\n    // https://github.com/open-telemetry/opentelemetry-js/blob/2d7eecbb19aec17bf2d8b9a4e4b2d84dc92c2d88/experimental/packages/opentelemetry-instrumentation-xml-http-request/src/xhr.ts#L639\n    // Exposing an option in this class to allow leaving the existing patch in place and letting a previous instrumentation\n    // control the global\n    if (\n      this._omitIfAlreadyPatched &&\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      (isWrapped(XMLHttpRequest.prototype.open) ||\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        isWrapped(XMLHttpRequest.prototype.send))\n    ) {\n      this._diag.debug(\n        'XMLHttpRequest is already passed and `omitIfAlreadyPatched` is true, skipping enabling this instrumentation'\n      );\n      return;\n    }\n\n    super.enable();\n  }\n}\n"],"names":["EmbraceXHRInstrumentation","XMLHttpRequestInstrumentation","omitIfAlreadyPatched","rest","enabled","_omitIfAlreadyPatched","enable","isWrapped","XMLHttpRequest","prototype","open","send","_diag","debug"],"mappings":";;;;;AAKO,MAAMA,yBAAAA,SAAkCC,2DAAAA,CAAAA;IAG7C,WAAA,CAAmB,EACjBC,oBAAoB,EACpB,GAAGC,MAC2B,GAAG,EAAE,CAAE;;;AAGrC,QAAA,KAAK,CAAC;AAAE,YAAA,GAAGA,IAAI;YAAEC,OAAAA,EAAS;AAAM,SAAA,CAAA;QAEhC,IAAI,CAACC,qBAAqB,GAAGH,oBAAAA;QAE7B,IAAIC,IAAAA,CAAKC,OAAO,EAAE;AAChB,YAAA,IAAI,CAACE,MAAM,EAAA;AACb,QAAA;AACF,IAAA;IAEgBA,MAAAA,GAAe;;;;;AAK7B,QAAA,IACE,IAAI,CAACD,qBAAqB;AAEzBE,SAAAA,0BAAUC,cAAAA,CAAeC,SAAS,CAACC,IAAI;AAEtCH,QAAAA,yBAAAA,CAAUC,cAAAA,CAAeC,SAAS,CAACE,IAAI,CAAA,CAAA,EACzC;AACA,YAAA,IAAI,CAACC,KAAK,CAACC,KAAK,CACd,6GAAA,CAAA;AAEF,YAAA;AACF,QAAA;AAEA,QAAA,KAAK,CAACP,MAAAA,EAAAA;AACR,IAAA;AACF;;;;"}