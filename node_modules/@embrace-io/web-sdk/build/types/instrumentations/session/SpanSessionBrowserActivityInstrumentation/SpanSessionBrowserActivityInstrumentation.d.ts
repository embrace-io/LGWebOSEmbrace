import { EmbraceInstrumentationBase } from '../../EmbraceInstrumentationBase/index.js';
import type { SpanSessionBrowserActivityInstrumentationArgs } from './types.js';
/**
 *  SpanSessionBrowserActivityInstrumentation will track the user activity and end the session span if there is no
 *  activity for a certain amount of time.
 *  SpanSessionBrowserActivityInstrumentation will initialize new sessions if new activity is detected and there is no
 *  active session.
 * */
export declare class SpanSessionBrowserActivityInstrumentation extends EmbraceInstrumentationBase {
    private readonly _onActivityThrottled;
    private _activityTimeout;
    constructor({ diag, }?: SpanSessionBrowserActivityInstrumentationArgs);
    disable: () => void;
    enable: () => void;
    private readonly _onInactivity;
    private readonly _onActivity;
}
//# sourceMappingURL=SpanSessionBrowserActivityInstrumentation.d.ts.map