import { EmbraceInstrumentationBase } from '../../EmbraceInstrumentationBase/index.js';
import type { NavigationInstrumentationArgs, Route } from './types.js';
import type { EMB_NAVIGATION_INSTRUMENTATIONS } from '../../../constants/index.js';
export declare class NavigationInstrumentation extends EmbraceInstrumentationBase {
    private readonly _shouldCleanupPathOptionsFromRouteName;
    private _currentRoute;
    private _currentRouteSpan;
    private _instrumentationType;
    private _removeSessionStartedFn;
    private _removeSessionEndedFn;
    constructor({ diag, shouldCleanupPathOptionsFromRouteName, }: NavigationInstrumentationArgs);
    setInstrumentationType: (instrumentationType: EMB_NAVIGATION_INSTRUMENTATIONS) => void;
    setCurrentRoute: (route: Route) => void;
    private readonly _setupSessionListeners;
    private readonly _cleanUpSessionListeners;
    private readonly _startRouteSpan;
    private readonly _endRouteSpan;
    enable: () => void;
    disable: () => void;
}
//# sourceMappingURL=NavigationInstrumentation.d.ts.map