import type { DiagLogger } from '@opentelemetry/api';
import type { ReadableSpan } from '@opentelemetry/sdk-trace-web';
export interface SpanStorageOptions {
    storage?: Storage;
    diag?: DiagLogger;
    storedSpansExpireTimeoutMS?: number;
    onExpiredSpansExport?: (spans: ReadableSpan[]) => void;
}
export declare class EmbraceSpanStorage {
    private readonly _noExportTracer;
    private readonly _storage;
    private readonly _diag;
    private readonly _onExpiredSpansExport?;
    private readonly _storedSpansExpireTimeoutMS;
    private _checkExpiredSpansInterval?;
    constructor({ storage, diag: diagParam, storedSpansExpireTimeoutMS, // 1 hour
    onExpiredSpansExport, }?: SpanStorageOptions);
    storePendingSpans(sessionId: string, sessionSpan: ReadableSpan, pendingSpans: ReadableSpan[]): void;
    clearStoredSpans(sessionId: string): void;
    startExpiredSpansCheck(): void;
    stopExpiredSpansCheck(): void;
    checkAndExportExpiredSpans(): void;
    _getPendingSpansKeys(): string[];
    destroy(): void;
}
//# sourceMappingURL=EmbraceSpanStorage.d.ts.map