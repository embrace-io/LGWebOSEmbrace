import type { AttributeValue } from '@opentelemetry/api';
import type { EmbraceLimitManagerArgs, LengthLimitedType, LimitedBreadcrumb, LimitedException, LimitedLog, LimitedSessionProperty, LimitManagerInternal } from './types.js';
import type { LogSeverity } from '../../api-logs/index.js';
import type { ReadableSpan } from '@opentelemetry/sdk-trace-web';
export declare class EmbraceLimitManager implements LimitManagerInternal {
    private readonly _diag;
    private _diagnosticCounts;
    private _currentCount;
    private readonly _maxAllowed;
    private readonly _maxLength;
    private readonly _maxAttributes;
    constructor({ diag: diagParam, maxAllowed, maxLength, maxAttributes, }: EmbraceLimitManagerArgs);
    private _dropIfMaxReached;
    truncateString(type: LengthLimitedType, body: string): string;
    private _truncateAttributes;
    limitBreadcrumb(name: string): LimitedBreadcrumb | 'dropped';
    limitException(message: string, attributes: Record<string, AttributeValue | undefined>): LimitedException | 'dropped';
    limitLog(message: string, severity: LogSeverity, attributes: Record<string, AttributeValue | undefined>): LimitedLog | 'dropped';
    limitSessionProperty(key: string, value: string): LimitedSessionProperty | 'dropped';
    dropReadableSpan(span: ReadableSpan): boolean;
    reset(): void;
    private _incrDiagnosticCount;
    getDiagnosticCounts(): Record<string, number>;
}
//# sourceMappingURL=EmbraceLimitManager.d.ts.map