import type { HrTime } from '@opentelemetry/api';
import type { ReadableSpan } from '@opentelemetry/sdk-trace-web';
import type { ExtendedSpan } from '../../index.js';
export interface SpanSessionManager {
    getSessionId: () => string | null;
    getSessionStartTime: () => HrTime | null;
    getSessionSpan: () => ExtendedSpan | null;
    startSessionSpan: (options?: StartSessionOptions) => void;
    endSessionSpan: () => void;
    addBreadcrumb: (name: string) => void;
    addProperty: (key: string, value: string, options?: PropertyOptions) => void;
    removeProperty: (key: string) => void;
    endSessionSpanInternal: (reason: ReasonSessionEnded) => void;
    currentSessionAsReadableSpan: (reason: ReasonSessionEnded) => ReadableSpan | null;
    addSessionStartedListener: (listener: () => void) => () => void;
    addSessionEndedListener: (listener: () => void) => () => void;
}
export type ReasonSessionEnded = 'unknown' | 'inactivity' | 'timer' | 'manual' | 'max_size_reached' | 'state_changed';
export type PropertyOptions = {
    lifespan?: 'permanent';
};
export type StartSessionOptions = {
    reason?: string;
};
//# sourceMappingURL=types.d.ts.map