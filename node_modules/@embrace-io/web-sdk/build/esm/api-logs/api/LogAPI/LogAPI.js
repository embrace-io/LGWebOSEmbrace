import { ProxyLogManager } from '../../manager/ProxyLogManager/ProxyLogManager.js';

class LogAPI {
    constructor({ proxyLogManager }){
        this.getLogManager = ()=>{
            return this._proxyLogManager;
        };
        this._proxyLogManager = proxyLogManager;
    }
    static getInstance() {
        if (!LogAPI._instance) {
            LogAPI._instance = new LogAPI({
                proxyLogManager: new ProxyLogManager()
            });
        }
        return LogAPI._instance;
    }
    setGlobalLogManager(logManager) {
        this._proxyLogManager.setDelegate(logManager);
    }
    logException(error, options) {
        this.getLogManager().logException(error, options);
    }
    message(message, level, options) {
        this.getLogManager().message(message, level, options);
    }
}

export { LogAPI };
//# sourceMappingURL=LogAPI.js.map
