{"version":3,"file":"WebVitalsInstrumentation.js","sources":["../../../../../src/instrumentations/web-vitals/WebVitalsInstrumentation/WebVitalsInstrumentation.ts"],"sourcesContent":["import type { Attributes } from '@opentelemetry/api';\nimport type {\n  CLSAttribution,\n  CLSMetricWithAttribution,\n  INPAttribution,\n  LCPAttribution,\n  MetricWithAttribution,\n  Metric,\n} from 'web-vitals/attribution';\nimport { EMB_TYPES, KEY_EMB_TYPE } from '../../../constants/index.js';\nimport {\n  ALL_WEB_VITALS,\n  CORE_WEB_VITALS,\n  EMB_WEB_VITALS_PREFIX,\n  WEB_VITALS_ID_TO_LISTENER,\n} from './constants.js';\nimport type {\n  WebVitalListeners,\n  WebVitalsInstrumentationArgs,\n} from './types.js';\nimport { EmbraceInstrumentationBase } from '../../EmbraceInstrumentationBase/index.js';\nimport { ATTR_URL_FULL } from '@opentelemetry/semantic-conventions';\nimport type { URLDocument } from '../../../common/index.js';\n\nconst webVitalAttributionToReport = (\n  name: Metric['name'],\n  metric: MetricWithAttribution\n) => {\n  const attributes: Attributes = {};\n  const toReport: {\n    key: string;\n    value: string | boolean | number | undefined;\n  }[] = [];\n\n  if (name === 'CLS') {\n    // https://www.npmjs.com/package/web-vitals#CLSAttribution\n    const attribution = metric.attribution as CLSAttribution;\n    toReport.push(\n      ...[\n        {\n          key: 'largestShiftTarget',\n          value: attribution.largestShiftTarget,\n        },\n        {\n          key: 'largestShiftValue',\n          value: attribution.largestShiftValue,\n        },\n      ]\n    );\n  } else if (name === 'INP') {\n    // https://www.npmjs.com/package/web-vitals#inpattribution\n    const attribution = metric.attribution as INPAttribution;\n    toReport.push(\n      ...[\n        { key: 'interactionTarget', value: attribution.interactionTarget },\n        { key: 'interactionType', value: attribution.interactionType },\n        { key: 'nextPaintTime', value: attribution.nextPaintTime },\n        { key: 'inputDelay', value: attribution.inputDelay },\n        { key: 'processingDuration', value: attribution.processingDuration },\n        { key: 'presentationDelay', value: attribution.presentationDelay },\n        { key: 'totalScriptDuration', value: attribution.totalScriptDuration },\n        {\n          key: 'totalStyleAndLayoutDuration',\n          value: attribution.totalStyleAndLayoutDuration,\n        },\n        { key: 'totalPaintDuration', value: attribution.totalPaintDuration },\n        {\n          key: 'totalUnattributedDuration',\n          value: attribution.totalUnattributedDuration,\n        },\n        { key: 'loadState', value: attribution.loadState },\n      ]\n    );\n  } else if (name === 'LCP') {\n    // https://www.npmjs.com/package/web-vitals#lcpattribution\n    const attribution = metric.attribution as LCPAttribution;\n    toReport.push(\n      ...[\n        { key: 'target', value: attribution.target },\n        { key: 'url', value: attribution.url },\n        { key: 'timeToFirstByte', value: attribution.timeToFirstByte },\n        { key: 'resourceLoadDelay', value: attribution.resourceLoadDelay },\n        {\n          key: 'resourceLoadDuration',\n          value: attribution.resourceLoadDuration,\n        },\n        { key: 'elementRenderDelay', value: attribution.elementRenderDelay },\n      ]\n    );\n  }\n\n  toReport.forEach(report => {\n    if (report.value !== undefined) {\n      attributes[`emb.web_vital.attribution.${report.key}`] = report.value;\n    }\n  });\n\n  return attributes;\n};\n\nexport class WebVitalsInstrumentation extends EmbraceInstrumentationBase {\n  private readonly _metricsToTrack: Metric['name'][];\n  private readonly _listeners: WebVitalListeners;\n  private readonly _urlDocument: URLDocument;\n  private readonly _urlAttribution: boolean;\n  private readonly _attributedURL: Record<Metric['name'], string | undefined> =\n    {\n      INP: undefined,\n      LCP: undefined,\n      CLS: undefined,\n      FCP: undefined,\n      TTFB: undefined,\n    };\n  private _largestShiftTargetForCLS: string | undefined;\n\n  // instrumentation that adds an event to the session span for each web vital report\n  public constructor({\n    diag,\n    perf,\n    trackingLevel = 'core',\n    listeners = WEB_VITALS_ID_TO_LISTENER,\n    urlDocument = window.document,\n    urlAttribution = true,\n  }: WebVitalsInstrumentationArgs = {}) {\n    super({\n      instrumentationName: 'WebVitalsInstrumentation',\n      instrumentationVersion: '1.0.0',\n      diag,\n      perf,\n      config: {},\n    });\n    this._listeners = listeners;\n    this._urlDocument = urlDocument;\n    this._metricsToTrack =\n      trackingLevel === 'core' ? [...CORE_WEB_VITALS] : [...ALL_WEB_VITALS];\n    this._urlAttribution = urlAttribution;\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n\n  public override disable(): void {\n    // do nothing.\n    // https://github.com/GoogleChrome/web-vitals/issues/357#issuecomment-1593439036\n  }\n\n  public enable(): void {\n    this._metricsToTrack.forEach(name => {\n      this._listeners[name]?.(metric => {\n        const currentSessionSpan = this.sessionManager.getSessionSpan();\n\n        if (!currentSessionSpan) {\n          return;\n        }\n\n        // first thing record the time when this cb was invoked\n        const metricTime = this._getTimeForMetric(metric);\n\n        const attrs: Attributes = {\n          [KEY_EMB_TYPE]: EMB_TYPES.WebVital,\n          [ATTR_URL_FULL]: this._getAttributedURLForMetric(metric),\n          'emb.web_vital.navigation_type': metric.navigationType,\n          'emb.web_vital.name': metric.name,\n          'emb.web_vital.rating': metric.rating,\n          'emb.web_vital.id': metric.id,\n          'emb.web_vital.delta': metric.delta,\n          'emb.web_vital.value': metric.value,\n          ...webVitalAttributionToReport(name, metric),\n        };\n\n        currentSessionSpan.addEvent(\n          `${EMB_WEB_VITALS_PREFIX}-report-${name}`,\n          attrs,\n          metricTime\n        );\n      });\n    });\n\n    if (this._urlAttribution) {\n      // When these web vitals make their final report (e.g. when the listeners w/ reportAllChanges=false trigger) the\n      // document's URL at that time may not match what it was at the time the scores were last updated. Instead, listen\n      // for updates to the scores and keep track of the URL to attribute for each\n      this._listeners.INP?.(\n        () => {\n          this._attributedURL.INP = this._urlDocument.URL;\n        },\n        {\n          reportAllChanges: true,\n        }\n      );\n      this._listeners.LCP?.(\n        () => {\n          this._attributedURL.LCP = this._urlDocument.URL;\n        },\n        {\n          reportAllChanges: true,\n        }\n      );\n      this._listeners.CLS?.(\n        (metric: MetricWithAttribution) => {\n          const clsMetric = metric as CLSMetricWithAttribution;\n          // A layout shift could cause CLS to change its rating but because the score is cumulative this might not\n          // correspond with an updated `largestShiftTarget`. Since we want to tie the attributed URL to the page that\n          // the `largestShiftTarget` was on we only update the attributed URL if that target has changed\n          if (\n            this._largestShiftTargetForCLS !==\n            clsMetric.attribution.largestShiftTarget\n          ) {\n            this._largestShiftTargetForCLS =\n              clsMetric.attribution.largestShiftTarget;\n            this._attributedURL.CLS = this._urlDocument.URL;\n          }\n        },\n        {\n          reportAllChanges: true,\n        }\n      );\n    }\n  }\n\n  private _getTimeForMetric(metric: MetricWithAttribution): number {\n    if (metric.name === 'CLS' && metric.attribution.largestShiftTime) {\n      return this.perf.epochMillisFromOriginOffset(\n        metric.attribution.largestShiftTime\n      );\n    }\n\n    if (metric.name === 'INP' && metric.attribution.interactionTime) {\n      return this.perf.epochMillisFromOriginOffset(\n        metric.attribution.interactionTime\n      );\n    }\n\n    return this.perf.getNowMillis();\n  }\n\n  private _getAttributedURLForMetric(metric: MetricWithAttribution): string {\n    if (metric.name === 'INP' && this._attributedURL.INP) {\n      return this._attributedURL.INP;\n    }\n\n    if (metric.name === 'LCP' && this._attributedURL.LCP) {\n      return this._attributedURL.LCP;\n    }\n\n    if (\n      metric.name === 'CLS' &&\n      this._attributedURL.CLS &&\n      metric.attribution.largestShiftTarget === this._largestShiftTargetForCLS\n    ) {\n      return this._attributedURL.CLS;\n    }\n\n    return this._urlDocument.URL;\n  }\n}\n"],"names":["webVitalAttributionToReport","name","metric","attributes","toReport","attribution","push","key","value","largestShiftTarget","largestShiftValue","interactionTarget","interactionType","nextPaintTime","inputDelay","processingDuration","presentationDelay","totalScriptDuration","totalStyleAndLayoutDuration","totalPaintDuration","totalUnattributedDuration","loadState","target","url","timeToFirstByte","resourceLoadDelay","resourceLoadDuration","elementRenderDelay","forEach","report","undefined","WebVitalsInstrumentation","EmbraceInstrumentationBase","diag","perf","trackingLevel","listeners","WEB_VITALS_ID_TO_LISTENER","urlDocument","window","document","urlAttribution","instrumentationName","instrumentationVersion","config","_attributedURL","INP","LCP","CLS","FCP","TTFB","_listeners","_urlDocument","_metricsToTrack","CORE_WEB_VITALS","ALL_WEB_VITALS","_urlAttribution","_config","enabled","enable","disable","currentSessionSpan","sessionManager","getSessionSpan","metricTime","_getTimeForMetric","attrs","KEY_EMB_TYPE","EMB_TYPES","WebVital","ATTR_URL_FULL","_getAttributedURLForMetric","navigationType","rating","id","delta","addEvent","EMB_WEB_VITALS_PREFIX","URL","reportAllChanges","clsMetric","_largestShiftTargetForCLS","largestShiftTime","epochMillisFromOriginOffset","interactionTime","getNowMillis"],"mappings":"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"}