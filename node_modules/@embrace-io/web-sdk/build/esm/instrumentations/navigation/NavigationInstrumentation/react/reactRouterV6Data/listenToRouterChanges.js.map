{"version":3,"file":"listenToRouterChanges.js","sources":["../../../../../../../src/instrumentations/navigation/NavigationInstrumentation/react/reactRouterV6Data/listenToRouterChanges.ts"],"sourcesContent":["import type { ListenToRouterChangesArgs, Match } from './types.js';\nimport type { Route } from '../../index.js';\nimport { getNavigationInstrumentation } from '../../index.js';\nimport { EMB_NAVIGATION_INSTRUMENTATIONS } from '../../../../../constants/index.js';\n\n/**\n * getRouteFromMatches goes through all the matches routes to build the full path\n * nested routes contain only the partial match, so we need to go through all of them\n * in order to build the full path.\n *\n * Filtering by currentPathname ensures that we only consider routes that are relevant to the current URL.\n */\nconst getRouteFromMatches = (\n  matches: Match[],\n  currentPathname: string\n): Route | null =>\n  matches\n    .filter(m => currentPathname.includes(m.pathname))\n    .reduce<null | Route>((route, match) => {\n      if (!match.route.path) {\n        return route;\n      }\n\n      if (route) {\n        return {\n          url: match.pathname,\n          path: `${route.path}/${match.route.path}`,\n        } as Route;\n      }\n\n      return {\n        url: match.pathname,\n        path: match.route.path,\n      } as Route;\n    }, null);\n\nexport const listenToRouterChanges = ({\n  router,\n  routesMatcher,\n  config: { pathnameDocument = window.location } = {},\n}: ListenToRouterChangesArgs) => {\n  const navigationInstrumentation = getNavigationInstrumentation();\n  navigationInstrumentation.setInstrumentationType(\n    EMB_NAVIGATION_INSTRUMENTATIONS.Data\n  );\n\n  const initialMatches = routesMatcher(router.routes, {\n    pathname: pathnameDocument.pathname,\n  });\n\n  const initialRoute = initialMatches\n    ? getRouteFromMatches(initialMatches, pathnameDocument.pathname)\n    : null;\n\n  if (initialRoute) {\n    navigationInstrumentation.setCurrentRoute(initialRoute);\n  }\n\n  return router.subscribe(state => {\n    // State has a list of already matched routes\n    // https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/router/router.ts#L954\n    const currentRoute = getRouteFromMatches(\n      state.matches,\n      state.location.pathname\n    );\n\n    if (currentRoute) {\n      navigationInstrumentation.setCurrentRoute(currentRoute);\n    }\n  });\n};\n"],"names":["getRouteFromMatches","matches","currentPathname","filter","m","includes","pathname","reduce","route","match","path","url","listenToRouterChanges","router","routesMatcher","config","pathnameDocument","window","location","navigationInstrumentation","getNavigationInstrumentation","setInstrumentationType","EMB_NAVIGATION_INSTRUMENTATIONS","Data","initialMatches","routes","initialRoute","setCurrentRoute","subscribe","state","currentRoute"],"mappings":";;;AAKA;;;;;;AAMC,IACD,MAAMA,mBAAAA,GAAsB,CAC1BC,SACAC,eAAAA,GAEAD,OAAAA,CACGE,MAAM,CAACC,CAAAA,IAAKF,eAAAA,CAAgBG,QAAQ,CAACD,CAAAA,CAAEE,QAAQ,GAC/CC,MAAM,CAAe,CAACC,KAAAA,EAAOC,KAAAA,GAAAA;AAC5B,QAAA,IAAI,CAACA,KAAAA,CAAMD,KAAK,CAACE,IAAI,EAAE;YACrB,OAAOF,KAAAA;AACT,QAAA;AAEA,QAAA,IAAIA,KAAAA,EAAO;YACT,OAAO;AACLG,gBAAAA,GAAAA,EAAKF,MAAMH,QAAQ;gBACnBI,IAAAA,EAAM,CAAA,EAAGF,KAAAA,CAAME,IAAI,CAAC,CAAC,EAAED,KAAAA,CAAMD,KAAK,CAACE,IAAI,CAAA;AACzC,aAAA;AACF,QAAA;QAEA,OAAO;AACLC,YAAAA,GAAAA,EAAKF,MAAMH,QAAQ;YACnBI,IAAAA,EAAMD,KAAAA,CAAMD,KAAK,CAACE;AACpB,SAAA;IACF,CAAA,EAAG,IAAA,CAAA;MAEME,qBAAAA,GAAwB,CAAC,EACpCC,MAAM,EACNC,aAAa,EACbC,MAAAA,EAAQ,EAAEC,mBAAmBC,MAAAA,CAAOC,QAAQ,EAAE,GAAG,EAAE,EACzB,GAAA;AAC1B,IAAA,MAAMC,yBAAAA,GAA4BC,4BAAAA,EAAAA;IAClCD,yBAAAA,CAA0BE,sBAAsB,CAC9CC,+BAAAA,CAAgCC,IAAI,CAAA;AAGtC,IAAA,MAAMC,cAAAA,GAAiBV,aAAAA,CAAcD,MAAAA,CAAOY,MAAM,EAAE;AAClDnB,QAAAA,QAAAA,EAAUU,iBAAiBV;AAC7B,KAAA,CAAA;AAEA,IAAA,MAAMoB,eAAeF,cAAAA,GACjBxB,mBAAAA,CAAoBwB,cAAAA,EAAgBR,gBAAAA,CAAiBV,QAAQ,CAAA,GAC7D,IAAA;AAEJ,IAAA,IAAIoB,YAAAA,EAAc;AAChBP,QAAAA,yBAAAA,CAA0BQ,eAAe,CAACD,YAAAA,CAAAA;AAC5C,IAAA;IAEA,OAAOb,MAAAA,CAAOe,SAAS,CAACC,CAAAA,KAAAA,GAAAA;;;QAGtB,MAAMC,YAAAA,GAAe9B,oBACnB6B,KAAAA,CAAM5B,OAAO,EACb4B,KAAAA,CAAMX,QAAQ,CAACZ,QAAQ,CAAA;AAGzB,QAAA,IAAIwB,YAAAA,EAAc;AAChBX,YAAAA,yBAAAA,CAA0BQ,eAAe,CAACG,YAAAA,CAAAA;AAC5C,QAAA;AACF,IAAA,CAAA,CAAA;AACF;;;;"}