import { InstrumentationAbstract } from '../InstrumentationAbstract/InstrumentationAbstract.js';
import { OTelPerformanceManager } from '../../utils/PerformanceManager/OTelPerformanceManager.js';
import { session } from '../../api-sessions/sessionAPI.js';
import { log } from '../../api-logs/logAPI.js';

class EmbraceInstrumentationBase extends InstrumentationAbstract {
    constructor({ instrumentationName, instrumentationVersion, config, diag, perf }){
        super(instrumentationName, instrumentationVersion, config);
        // optionally override the diag logger from the base class
        if (diag) {
            this._diag = diag;
        }
        this._perf = perf ?? new OTelPerformanceManager();
        this._sessionManager = session.getSpanSessionManager();
        this._logManager = log.getLogManager();
    }
    /* Returns session provider */ get sessionManager() {
        return this._sessionManager;
    }
    /* Returns log manager */ get logManager() {
        return this._logManager;
    }
    /* Returns the performance manager */ get perf() {
        return this._perf;
    }
    // no-op
    init() {
        return undefined;
    }
    setLogManager(logManager) {
        this._logManager = logManager;
    }
    setSessionManager(sessionManager) {
        this._sessionManager = sessionManager;
    }
}

export { EmbraceInstrumentationBase };
//# sourceMappingURL=EmbraceInstrumentationBase.js.map
