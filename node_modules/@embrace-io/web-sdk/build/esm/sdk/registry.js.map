{"version":3,"file":"registry.js","sources":["../../../src/sdk/registry.ts"],"sourcesContent":["import type { SDKControl, SDKRegistryManager } from './types.js';\nimport type { DiagLogger } from '@opentelemetry/api';\nimport { diag } from '@opentelemetry/api';\n\nclass Registry implements SDKRegistryManager {\n  private _sdk: SDKControl | null = null;\n  private readonly _diag: DiagLogger;\n\n  public constructor({\n    diagLogger = diag.createComponentLogger({ namespace: 'embrace-registry' }),\n  }: { diagLogger?: DiagLogger } = {}) {\n    this._diag = diagLogger;\n  }\n\n  public register: (sdk: SDKControl) => void = sdk => {\n    if (this._sdk !== null) {\n      this._diag.warn('previously registered sdk will be overwritten');\n    }\n    this._sdk = sdk;\n  };\n\n  public clear: () => void = () => {\n    if (this._sdk === null) {\n      this._diag.warn('sdk already cleared, this is a no-op');\n    }\n    this._sdk = null;\n  };\n\n  public registered: () => SDKControl | null = () => {\n    return this._sdk;\n  };\n}\n\nexport const registry = new Registry();\n"],"names":["Registry","diagLogger","diag","createComponentLogger","namespace","_sdk","register","sdk","_diag","warn","clear","registered","registry"],"mappings":";;AAIA,MAAMA,QAAAA,CAAAA;AAIJ,IAAA,WAAA,CAAmB,EACjBC,UAAAA,GAAaC,IAAAA,CAAKC,qBAAqB,CAAC;QAAEC,SAAAA,EAAW;AAAmB,KAAA,CAAE,EAC9C,GAAG,EAAE,CAAE;aAL7BC,IAAAA,GAA0B,IAAA;AAS3BC,QAAAA,IAAAA,CAAAA,QAAAA,GAAsCC,CAAAA,GAAAA,GAAAA;AAC3C,YAAA,IAAI,IAAI,CAACF,IAAI,KAAK,IAAA,EAAM;AACtB,gBAAA,IAAI,CAACG,KAAK,CAACC,IAAI,CAAC,+CAAA,CAAA;AAClB,YAAA;YACA,IAAI,CAACJ,IAAI,GAAGE,GAAAA;AACd,QAAA,CAAA;aAEOG,KAAAA,GAAoB,IAAA;AACzB,YAAA,IAAI,IAAI,CAACL,IAAI,KAAK,IAAA,EAAM;AACtB,gBAAA,IAAI,CAACG,KAAK,CAACC,IAAI,CAAC,sCAAA,CAAA;AAClB,YAAA;YACA,IAAI,CAACJ,IAAI,GAAG,IAAA;AACd,QAAA,CAAA;aAEOM,UAAAA,GAAsC,IAAA;YAC3C,OAAO,IAAI,CAACN,IAAI;AAClB,QAAA,CAAA;QAnBE,IAAI,CAACG,KAAK,GAAGP,UAAAA;AACf,IAAA;AAmBF;AAEO,MAAMW,QAAAA,GAAW,IAAIZ,QAAAA;;;;"}