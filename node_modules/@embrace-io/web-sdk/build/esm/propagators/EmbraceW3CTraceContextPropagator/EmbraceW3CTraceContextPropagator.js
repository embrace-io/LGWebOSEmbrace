import { W3CTraceContextPropagator } from '@opentelemetry/core';
import { trace, defaultTextMapGetter } from '@opentelemetry/api';
import { KEY_EMB_W3C_TRACEPARENT } from '../../constants/attributes.js';

class EmbraceW3CTraceContextPropagator extends W3CTraceContextPropagator {
    inject(context, carrier, setter) {
        super.inject(context, carrier, setter);
        // Add the injected Traceparent header as an attribute to the span in the current
        // context if both are available
        const span = trace.getSpan(context);
        if (span) {
            const traceparent = defaultTextMapGetter.get(carrier, 'traceparent');
            if (traceparent) {
                span.setAttribute(KEY_EMB_W3C_TRACEPARENT, traceparent);
            }
        }
    }
}

export { EmbraceW3CTraceContextPropagator };
//# sourceMappingURL=EmbraceW3CTraceContextPropagator.js.map
