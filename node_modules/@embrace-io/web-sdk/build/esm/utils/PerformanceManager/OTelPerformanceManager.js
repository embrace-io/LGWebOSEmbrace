import { millisToHrTime, hrTimeToMilliseconds } from '@opentelemetry/core';

class OTelPerformanceManager {
    constructor(clock = window.performance){
        this.epochMillisFromOriginOffset = (originOffset)=>this._clock.timeOrigin + originOffset;
        this.getNowHRTime = ()=>millisToHrTime(this.getNowMillis());
        this.getNowMillis = ()=>this.epochMillisFromOriginOffset(this._clock.now()); // otperformance.now() returns milliseconds since timeOrigin, timeOrigin is the time from epoch to the start of the page load
        this.millisSinceHRTime = (time)=>this.getNowMillis() - hrTimeToMilliseconds(time);
        this._clock = clock;
    }
}

export { OTelPerformanceManager };
//# sourceMappingURL=OTelPerformanceManager.js.map
