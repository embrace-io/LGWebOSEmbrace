{"version":3,"file":"isDeviceIdEnabled.js","sources":["../../../src/utils/isDeviceIdEnabled.ts"],"sourcesContent":["const DIGITS = 6;\n\n/**\n * Determines whether a deviceId is enabled for the given pctEnabled. This is achieved\n * by taking a normalized hex value from the last 6 digits of the device ID, and comparing\n * it against the enabled percentage. This ensures that devices are consistently in a given\n * group for beta functionality.\n *\n * This can be used to:\n * - Select sample devices for telemetry collection\n * - Enable/disable features for a percentage of users\n *\n * The normalized device ID has 16^6 possibilities (roughly 1.6m) which should be sufficient\n * granularity for our needs.\n */\nexport const isDeviceIdEnabled = (deviceId: string, pctEnabled?: number) => {\n  if (!pctEnabled || pctEnabled <= 0 || pctEnabled > 100) {\n    return false;\n  }\n\n  const normalizedDeviceId = getNormalizedDeviceId(deviceId);\n\n  return pctEnabled >= normalizedDeviceId;\n};\n\nconst getNormalizedDeviceId = (deviceId: string): number => {\n  const finalChars = deviceId.slice(-DIGITS); // last 6 chars\n  const radix = 16;\n  const space = Math.pow(radix, DIGITS) - 1;\n  const value = parseInt(finalChars, radix);\n\n  return (value / space) * 100;\n};\n"],"names":["DIGITS","isDeviceIdEnabled","deviceId","pctEnabled","normalizedDeviceId","getNormalizedDeviceId","finalChars","slice","radix","space","Math","pow","value","parseInt"],"mappings":"AAAA,MAAMA,MAAAA,GAAS,CAAA;AAEf;;;;;;;;;;;;AAYC,IACM,MAAMC,iBAAAA,GAAoB,CAACC,QAAAA,EAAkBC,UAAAA,GAAAA;AAClD,IAAA,IAAI,CAACA,UAAAA,IAAcA,UAAAA,IAAc,CAAA,IAAKA,aAAa,GAAA,EAAK;QACtD,OAAO,KAAA;AACT,IAAA;AAEA,IAAA,MAAMC,qBAAqBC,qBAAAA,CAAsBH,QAAAA,CAAAA;AAEjD,IAAA,OAAOC,UAAAA,IAAcC,kBAAAA;AACvB;AAEA,MAAMC,wBAAwB,CAACH,QAAAA,GAAAA;AAC7B,IAAA,MAAMI,aAAaJ,QAAAA,CAASK,KAAK,CAAC,CAACP;AACnC,IAAA,MAAMQ,KAAAA,GAAQ,EAAA;AACd,IAAA,MAAMC,KAAAA,GAAQC,IAAAA,CAAKC,GAAG,CAACH,OAAOR,MAAAA,CAAAA,GAAU,CAAA;IACxC,MAAMY,KAAAA,GAAQC,SAASP,UAAAA,EAAYE,KAAAA,CAAAA;IAEnC,OAAQI,QAAQH,KAAAA,GAAS,GAAA;AAC3B,CAAA;;;;"}