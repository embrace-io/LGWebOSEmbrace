import { NoOpSpanSessionManager } from '../NoOpSpanSessionManager/NoOpSpanSessionManager.js';

const NOOP_SPAN_SESSION_MANAGER = new NoOpSpanSessionManager();
class ProxySpanSessionManager {
    getDelegate() {
        return this._delegate ?? NOOP_SPAN_SESSION_MANAGER;
    }
    setDelegate(delegate) {
        this._delegate = delegate;
    }
    addBreadcrumb(name) {
        this.getDelegate().addBreadcrumb(name);
    }
    addProperty(key, value, options) {
        this.getDelegate().addProperty(key, value, options);
    }
    removeProperty(key) {
        this.getDelegate().removeProperty(key);
    }
    endSessionSpan() {
        this.getDelegate().endSessionSpan();
    }
    endSessionSpanInternal(reason) {
        this.getDelegate().endSessionSpanInternal(reason);
    }
    currentSessionAsReadableSpan(reason) {
        return this.getDelegate().currentSessionAsReadableSpan(reason);
    }
    getSessionId() {
        return this.getDelegate().getSessionId();
    }
    getSessionSpan() {
        return this.getDelegate().getSessionSpan();
    }
    getSessionStartTime() {
        return this.getDelegate().getSessionStartTime();
    }
    startSessionSpan(options) {
        this.getDelegate().startSessionSpan(options);
    }
    addSessionStartedListener(listener) {
        return this.getDelegate().addSessionStartedListener(listener);
    }
    addSessionEndedListener(listener) {
        return this.getDelegate().addSessionEndedListener(listener);
    }
}

export { ProxySpanSessionManager };
//# sourceMappingURL=ProxySpanSessionManager.js.map
