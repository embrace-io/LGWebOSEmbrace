import { ProxyTraceManager } from '../../manager/ProxyTraceManager/ProxyTraceManager.js';

class TraceAPI {
    constructor({ proxyTraceManager }){
        this.getTraceManager = ()=>{
            return this._proxyTraceManager;
        };
        this._proxyTraceManager = proxyTraceManager;
    }
    static getInstance() {
        if (!TraceAPI._instance) {
            TraceAPI._instance = new TraceAPI({
                proxyTraceManager: new ProxyTraceManager()
            });
        }
        return TraceAPI._instance;
    }
    setGlobalTraceManager(traceManager) {
        this._proxyTraceManager.setDelegate(traceManager);
    }
    startSpan(name, options, context) {
        return this.getTraceManager().startSpan(name, options, context);
    }
    setSpan(context, span) {
        return this.getTraceManager().setSpan(context, span);
    }
    getSpan(context) {
        return this.getTraceManager().getSpan(context);
    }
}

export { TraceAPI };
//# sourceMappingURL=TraceAPI.js.map
