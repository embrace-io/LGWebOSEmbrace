import { INVALID_SPAN_CONTEXT } from '@opentelemetry/api';

// File copied mostly from
// https://github.com/open-telemetry/opentelemetry-js/blob/7e30af4c15017f48cbdffa054889c62b2006e4ed/api/src/trace/NonRecordingSpan.ts#L31
// Added ExtendedSpan interface methods
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ class NonRecordingExtendedSpan {
    constructor(_spanContext = INVALID_SPAN_CONTEXT){
        this.attributes = {};
        this._spanContext = _spanContext;
    }
    fail(_options) {}
    spanContext() {
        return this._spanContext;
    }
    setAttribute(_key, _value) {
        return this;
    }
    setAttributes(_attributes) {
        return this;
    }
    removeAttribute(_key) {
        return this;
    }
    addEvent(_name, _attributesOrStartTime, _startTime) {
        return this;
    }
    addLink(_link) {
        return this;
    }
    addLinks(_links) {
        return this;
    }
    setStatus(_status) {
        return this;
    }
    updateName(_name) {
        return this;
    }
    end(_endTime) {}
    isRecording() {
        return false;
    }
    recordException(_exception, _time) {}
}

export { NonRecordingExtendedSpan };
//# sourceMappingURL=NonRecordingExtendedSpan.js.map
