{"version":3,"file":"EmbraceTraceManager.js","sources":["../../../../src/managers/EmbraceTraceManager/EmbraceTraceManager.ts"],"sourcesContent":["import type { Context, Tracer } from '@opentelemetry/api';\nimport { context, trace } from '@opentelemetry/api';\nimport type {\n  ExtendedSpan,\n  ExtendedSpanOptions,\n  TraceManager,\n  TraceManagerArgs,\n} from '../../api-traces/index.js';\nimport { EMB_TYPES, KEY_EMB_TYPE } from '../../constants/index.js';\nimport { EmbraceExtendedSpan } from './EmbraceExtendedSpan.js';\n\nexport class EmbraceTraceManager implements TraceManager {\n  private readonly _tracer: Tracer;\n\n  public constructor({\n    tracerProvider: globalTraceProviderOverride,\n  }: TraceManagerArgs = {}) {\n    const tracerProvider = globalTraceProviderOverride ?? trace;\n\n    this._tracer = tracerProvider.getTracer('embrace-web-sdk-traces');\n  }\n\n  public startSpan(\n    name: string,\n    options: ExtendedSpanOptions = {},\n    ctx?: Context\n  ): ExtendedSpan {\n    options.attributes = options.attributes ? options.attributes : {};\n    options.attributes[KEY_EMB_TYPE] = EMB_TYPES.Perf;\n\n    const activeContext = options.parentSpan\n      ? trace.setSpan(context.active(), options.parentSpan)\n      : ctx;\n\n    return new EmbraceExtendedSpan(\n      this._tracer.startSpan(name, options, activeContext)\n    );\n  }\n\n  public setSpan: TraceManager['setSpan'] = trace.setSpan;\n\n  public getSpan(context: Context): ExtendedSpan | undefined {\n    const span = trace.getSpan(context);\n\n    if (span) {\n      return new EmbraceExtendedSpan(span);\n    }\n\n    return undefined;\n  }\n}\n"],"names":["EmbraceTraceManager","tracerProvider","globalTraceProviderOverride","setSpan","trace","_tracer","getTracer","startSpan","name","options","ctx","attributes","KEY_EMB_TYPE","EMB_TYPES","Perf","activeContext","parentSpan","context","active","EmbraceExtendedSpan","getSpan","span","undefined"],"mappings":";;;;AAWO,MAAMA,mBAAAA,CAAAA;AAGX,IAAA,WAAA,CAAmB,EACjBC,cAAAA,EAAgBC,2BAA2B,EAC1B,GAAG,EAAE,CAAE;AAuBnBC,QAAAA,IAAAA,CAAAA,OAAAA,GAAmCC,MAAMD,OAAO;AAtBrD,QAAA,MAAMF,iBAAiBC,2BAAAA,IAA+BE,KAAAA;AAEtD,QAAA,IAAI,CAACC,OAAO,GAAGJ,cAAAA,CAAeK,SAAS,CAAC,wBAAA,CAAA;AAC1C,IAAA;AAEOC,IAAAA,SAAAA,CACLC,IAAY,EACZC,OAAAA,GAA+B,EAAE,EACjCC,GAAa,EACC;QACdD,OAAAA,CAAQE,UAAU,GAAGF,OAAAA,CAAQE,UAAU,GAAGF,OAAAA,CAAQE,UAAU,GAAG,EAAC;AAChEF,QAAAA,OAAAA,CAAQE,UAAU,CAACC,YAAAA,CAAa,GAAGC,UAAUC,IAAI;AAEjD,QAAA,MAAMC,aAAAA,GAAgBN,OAAAA,CAAQO,UAAU,GACpCZ,KAAAA,CAAMD,OAAO,CAACc,OAAAA,CAAQC,MAAM,EAAA,EAAIT,OAAAA,CAAQO,UAAU,CAAA,GAClDN,GAAAA;QAEJ,OAAO,IAAIS,oBACT,IAAI,CAACd,OAAO,CAACE,SAAS,CAACC,IAAAA,EAAMC,OAAAA,EAASM,aAAAA,CAAAA,CAAAA;AAE1C,IAAA;AAIOK,IAAAA,OAAAA,CAAQH,OAAgB,EAA4B;QACzD,MAAMI,IAAAA,GAAOjB,KAAAA,CAAMgB,OAAO,CAACH,OAAAA,CAAAA;AAE3B,QAAA,IAAII,IAAAA,EAAM;AACR,YAAA,OAAO,IAAIF,mBAAAA,CAAoBE,IAAAA,CAAAA;AACjC,QAAA;QAEA,OAAOC,SAAAA;AACT,IAAA;AACF;;;;"}