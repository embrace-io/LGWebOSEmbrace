{"version":3,"file":"types.js","sources":["../../../../src/managers/EmbraceUserManager/types.ts"],"sourcesContent":["import type { DiagLogger } from '@opentelemetry/api';\nimport type { User } from '../../api-users/index.js';\nimport { KEY_ENDUSER_PSEUDO_ID } from '../../api-users/index.js';\n\nexport interface EmbraceUserManagerArgs {\n  diag?: DiagLogger;\n  storage?: Storage;\n}\n\nexport const isUser = (user: unknown): user is User =>\n  typeof (user as User)[KEY_ENDUSER_PSEUDO_ID] === 'string' &&\n  (user as User)[KEY_ENDUSER_PSEUDO_ID].length === 32;\n\nexport const isUserId = (userId: unknown): userId is string =>\n  typeof userId === 'string' && userId.length === 32;\n"],"names":["isUser","user","KEY_ENDUSER_PSEUDO_ID","length","isUserId","userId"],"mappings":";;MASaA,MAAAA,GAAS,CAACC,OACrB,OAAQA,IAAa,CAACC,qBAAAA,CAAsB,KAAK,QAAA,IACjD,IAAc,CAACA,sBAAsB,CAACC,MAAM,KAAK;AAE5C,MAAMC,QAAAA,GAAW,CAACC,MAAAA,GACvB,OAAOA,WAAW,QAAA,IAAYA,MAAAA,CAAOF,MAAM,KAAK;;;;"}