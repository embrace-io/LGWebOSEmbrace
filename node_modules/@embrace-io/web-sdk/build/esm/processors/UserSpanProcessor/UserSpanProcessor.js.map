{"version":3,"file":"UserSpanProcessor.js","sources":["../../../../src/processors/UserSpanProcessor/UserSpanProcessor.ts"],"sourcesContent":["import type { ReadableSpan, SpanProcessor } from '@opentelemetry/sdk-trace-web';\nimport type { UserManager } from '../../api-users/index.js';\nimport type { UserSpanProcessorArgs } from './types.js';\nimport { ATTR_USER_ID } from '@opentelemetry/semantic-conventions/incubating';\n\n/**\n * UserSpanProcessor sets the userId attribute on all spans if the userId is set in the UserManager.\n */\nexport class UserSpanProcessor implements SpanProcessor {\n  private readonly _userManager: UserManager;\n\n  public constructor({ userManager }: UserSpanProcessorArgs) {\n    this._userManager = userManager;\n  }\n\n  public forceFlush(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  // TODO `onEnd` is not supposed to modify the span. There is a new experimental onEnding api that allows modifying\n  // using onEnd to make sure we get the userId at the last possible moment in case it was set up after the span was started.\n  public onEnd(span: ReadableSpan): void {\n    const userId = this._userManager.getUserId();\n\n    if (userId) {\n      span.attributes[ATTR_USER_ID] = userId;\n    }\n  }\n\n  public onStart(this: void): void {\n    // do nothing.\n  }\n\n  public shutdown(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n}\n"],"names":["UserSpanProcessor","userManager","_userManager","forceFlush","Promise","resolve","undefined","onEnd","span","userId","getUserId","attributes","ATTR_USER_ID","onStart","shutdown"],"mappings":";;AAKA;;AAEC,IACM,MAAMA,iBAAAA,CAAAA;IAGX,WAAA,CAAmB,EAAEC,WAAW,EAAyB,CAAE;QACzD,IAAI,CAACC,YAAY,GAAGD,WAAAA;AACtB,IAAA;IAEOE,UAAAA,GAA4B;QACjC,OAAOC,OAAAA,CAAQC,OAAO,CAACC,SAAAA,CAAAA;AACzB,IAAA;;;AAIOC,IAAAA,KAAAA,CAAMC,IAAkB,EAAQ;AACrC,QAAA,MAAMC,MAAAA,GAAS,IAAI,CAACP,YAAY,CAACQ,SAAS,EAAA;AAE1C,QAAA,IAAID,MAAAA,EAAQ;YACVD,IAAAA,CAAKG,UAAU,CAACC,YAAAA,CAAa,GAAGH,MAAAA;AAClC,QAAA;AACF,IAAA;IAEOI,OAAAA,GAA0B;;AAEjC,IAAA;IAEOC,QAAAA,GAA0B;QAC/B,OAAOV,OAAAA,CAAQC,OAAO,CAACC,SAAAA,CAAAA;AACzB,IAAA;AACF;;;;"}